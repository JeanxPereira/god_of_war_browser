name: Go Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    env:
      GOPATH: C:\gopath
      GOARCH: 386
      GOOS: windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.5'

    - name: Set up PATH
      run: |
        echo %PATH%
        echo %GOPATH%
        set PATH=%GOPATH%\bin;C:\go\bin;%PATH%

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build project
      run: go build

    - name: Archive web files and build output
      run: |
        7z a god_of_war_browser.zip -r C:\gopath\src\github.com\mogaika\god_of_war_browser\web -x!*.go
        7z a god_of_war_browser.zip god_of_war_browser.exe
        7z a god_of_war_browser.zip font_aliases.cfg
        7z a god_of_war_browser.zip font_aliases.ru.cp1251.cfg
        7z a god_of_war_browser.zip LOCALIZATION.md
        7z a god_of_war_browser.zip README.md
        7z a god_of_war_browser.zip hashes.dump.txt
        7z a god_of_war_browser.zip strings.dump.txt
        ren god_of_war_browser.zip god_of_war_browser.%GITHUB_RUN_NUMBER%.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: archive
        path: god_of_war_browser.%GITHUB_RUN_NUMBER%.zip

    - name: Send success webhook (optional)
      if: success()
      run: |
        curl -LO https://raw.githubusercontent.com/DiscordHooks/appveyor-discord-webhook/master/send.ps1
        pwsh send.ps1 success ${{ secrets.WEBHOOK_URL }}

    - name: Send failure webhook (optional)
      if: failure()
      run: |
        curl -LO https://raw.githubusercontent.com/DiscordHooks/appveyor-discord-webhook/master/send.ps1
        pwsh send.ps1 failure ${{ secrets.WEBHOOK_URL }}
